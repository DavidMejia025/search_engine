  POSTGRES;
    [] ? , ?? operator
    [] -> operator
    [] table.column syntax
       It seems to be a way of geting values from n tables but I think it can be done
       with an join operation.

       SELECT table.column1, table2.column2 FROM table1, table2

    sudo -u postgres -i

    get into psgt console
      psgt username database

      \? list all comands, \l list dabas, \du list users \dt list of DB \connect DBNAME
       https://www.postgresql.org/docs/9.6/catalogs.html
         SELECT * FROM pg_catalog.(table) e.g pg_table, pg_user, pg_roles

      For negotiatus a user postgres with superuser attributes is necessary
        CREATE USER postgres
        ALTER postgres WITH SUPERUSER, DBCREATE
        DROP ROLE postgres

      SQL instructions
        CREATE table (column TYPE CONSTRAINTS);
        CREATE TABLE table_name (
          column_name TYPE column_constraint,
          table_constraint table_constraint
          ) INHERITS existing_table_name;
          INSERT INTO table (columns) VALUES (values)
            do not use ", it throws errors, use ' instead


       CREATE TABLE account(
          user_id serial PRIMARY KEY,
          username VARCHAR (50) UNIQUE NOT NULL,

word VARCHAR (50) NOT NULL,
          email VARCHAR (355) UNIQUE NOT NULL,
          created_on TIMESTAMP NOT NULL,
          last_login TIMESTAMP
       );

        SELECT (columns)* FROM table
        UPDATE table SET column = vallue  WHERE condition;

      Every sentence in psgt must ends with semicolon ;
       ? is the Postgres JSONB operator to check whether an object contains a given key

     SQL useful examples
       SELECT "t1"."id"
       FROM "tasks" AS t1

       SELECT id FROM column
        WHERE ('SOME_ID' = ANY(SELECT jsonb_array_elements_text(data->'array_with_ids')))
        limit 1
       ;

       STORE SQL RESULT INTO A NEW TABLE
           create temporary table temp_data2 as (SELECT id FROM (SELECT * FROM organization INNER JOIN leads ON TRUE) as bar );
           SELECT * INTO new_table FROM other_table( (sql sentence) as some_name

    August28.
      connect to postgres from a default basic user
        sudo -u postgres psql

      INSERT FROM table VALUES (val1, val2, val_n), (column1, column2, ... , column_n)
      Good link with basic info
        http://www.postgresqltutorial.com/postgresql-list-users/

     All magic is done in RUBY with PG gem. gem install pg
       http://zetcode.com/db/postgresqlruby/
         PG::RESULTS
           https://www.rubydoc.info/gems/pg/PG/Result
[]       study send sql statment prepare.

        useful link for basic postgres commands.
          https://chartio.com/resources/tutorials/how-to-list-databases-and-tables-in-postgresql-using-psql/

        Add Columns to a Table (Database Engine)
          Before You Begin
Limitations and Restrictions
Using the ALTER TABLE statement to add columns to a table automatically adds those columns to the end of the table. If you want the columns in a specific order in the table, use SQL Server Management Studio. However, note that this is not a database design best practice. Best practice is to specify the order in which the columns are returned at the application and query level. You should not rely on the use of SELECT * to return all columns in an expected order based on the order in which they are defined in the table. Always specify the columns by name in your queries and applications in the order in which you would like them to appear.
           add_columns = "ALTER TABLE links_table 
                            ADD COLUMN in_links VARCHAR(2000),
                            ADD COLUMN out_links VARCHAR(2000)"
Security
Permissions
Requires ALTER permission on the table.

         Example:
             test_3_aug_29=# CREATE TABLE Webpages (doc_id INT PRIMARY KEY, url VARCHAR(250) UNIQUE, html TEXT NULL);
             INSERT INTO Webpages (doc_id,url) VALUES(4,'www.google2.com');
             INSERT INTO Omar VALUES(2, 'www.google.com', 'DOCTYPE html');

             PLEASE TAKE INTO ACCOUNT in psql that " are not allowed and strings have to be labled under ' single quotations.


             Best resource
                http://www.postgresqltutorial.com/

